{
	"info": {
		"_postman_id": "1634a1cb-1350-4fbf-b791-0151a4b7a486",
		"name": "HandsOnPostman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26324340"
	},
	"item": [
		{
			"name": "UserGetRequest",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UserPostRequest",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {  \"id\": \"80\",\r\n       \"userName\": \"Arushi\",\r\n        \"password\": \"ABC123\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserRequestById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Validate Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.userName).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.password).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Validate Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8; v=1.0');\r",
							"});\r",
							"pm.test(\"Validate all fields values\", () => {\r",
							"  pm.expect(jsonData.userName).to.be.deep.equals(\"User 10\")\r",
							"  pm.expect(jsonData.password).to.be.deep.equals(\"Password10\")\r",
							"  pm.expect(jsonData.id).to.eql(10);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Validate Response time is less than 1000ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users/10",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Users",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutUserRequest",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"userName\": \"HandsonPractice_SampleUser\",\r\n    \"password\": \"HandsonPractice_SamplePassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users/1",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUserRequest",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Users/2",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetActivitiesRequest",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Activities"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutActivityRequest",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"title\": \"Handson_SampleActivity \",\r\n        \"dueDate\": \"2024-04-02T07:38:28.3322149+00:00\",\r\n        \"completed\": true\r\n}\r\n    ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/1",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Activities",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteActivityRequest",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/2",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Activities",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetActivityRequestById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Validate title field\", () => {\r",
							"  pm.expect(jsonData.title).to.be.deep.equals(\"Activity 1\")\r",
							"});\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities/1",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Activities",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostActivityRequest",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{        \"id\": 34,\r\n        \"title\": \"Handson_Post_SampleActivity \",\r\n        \"dueDate\": \"2024-04-02T07:38:28.3322149+00:00\",\r\n        \"completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakerestapi.azurewebsites.net/api/v1/Activities",
					"protocol": "https",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Activities"
					]
				}
			},
			"response": []
		}
	]
}